   // card css --> 
    // https://codepen.io/kolpak/pen/ezoGWy (via )

  // ♡ ♥ ❤

  // From "Building the Simple Liker App" //
    function likeEvent (event){
      const heart = event.target;
      heart.addEventListener('click');
      mimicServerCall() // 'http://mimicServer.example.com'
      .then(function() {
        if (heart.innerText === EMPTY_HEART){
          heart.innerText = FULL_HEART;
          } else {
          heart.innerText = EMPTY_HEART;
        }
      }) 

      // function renderSearch() {
//   const textField = document.createElement('form');
//   textField.idName = "search";
//   console.log(textField); 

//   document.append(textField);
// }

<nav class="nav">
  <ul>
    <li>
      <a href="#" class="nav_link">Dashboard</a>
    </li>
    <li>
      <a href="#jokes" class="nav_link">Jokes</a>
    </li>
    <li>
      <a href="#add-joke" class="nav_link">Add a joke</a>
    </li>
    <li>
      <a href="#search" class="nav_link">Search</a>
    </li>
  </ul>
</nav>

? Like btn

// Lines 52-59
 likeBtn.className = 'like-btn';
  likeBtn.setAttribute('id', joke.id);
  likeBtn.innerText = 'like ♡';
  likeBtn.addEventListener('click', event => addLike(event, joke));

  const likes = document.createElement('p');
  likes.className = 'likes';
  likes.innerText = (`${joke.likes} likes`);

  **** 3 event listeners ****
  **** iterator**** clean, DRY code**** API
  **** HTML
  **** Book mtg by 7/11 45min project review
  - code
  - blog
  - readme
  - video (3min or less) - user 

  Review:
  - talk thru App
  - show/describe code (function-driven, not line-by-line)
    - why obj, fetch - promise - what i do with promise... update DB. / why choosing an iterator? why using? how implementing it.
  - code challenge


+ 1-2 more event listeners (hover / show delivery option)
-keydown/up
look at event listeners

  - submit work w/o code notes
  - be explicit in naming (p, moreLikes, likejokes - function names, behaviors) -what it is + what it does
  ACTION + target

  submit handler jokes

  // Notes from 7.5 course instructor mtg
  - filter catergory = search word
  - single, pluralized, non-capital letters
  - array.filter method - outputs new array
  - array.clear info - output new arr post-filter
  - else - if empty? (default to full collection)
  - category search -->
    - fram prob: narrow list down to...
  - Cmd - D / alt - D - multiple cursors selection


// Fix likeBtn //
Line 16 function addLike(event, joke, [Element you want to change here]) {
  const more = parseInt(joke.likes++);
  fetch(`http://localhost:3000/jokes/${joke.id}`, {
    method: 'PATCH',
    headers: {
      "Content-type": "application/json",
      Accept: "application/json"
    },
    body: JSON.stringify({
      "likes": more
    })
  })
    .then(data => data.json())
    .then(updatedJoke => { // response unused?
      [Element you want to change here].innerText = `${updatedJoke.likes} likes`
    })
Line 32 }


const likeBtn = document.createElement('button');
  likeBtn.className = 'like-btn';
  likeBtn.setAttribute('id', joke.id);
  likeBtn.innerText = 'like ♡';
  likeBtn.addEventListener('click', event => addLike(event, joke, [Element you want to change here]));


  const likes = document.createElement('p');

  function showJokes(jokeArray) {
  for (let i = 0; i < 12; i++) {
    const obj = jokeArray.joke;
    joke = joke + i;
  }
  console.log(jokeArray);
}

// Add a new joke
// form input
// function with fetch
// function renderNewJoke
// create inner card elements
// append elements to card
// append card to dom