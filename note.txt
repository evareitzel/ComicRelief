from https://www.youtube.com/watch?v=A26IqhyHU4c @4min:
<script>
    var pages = {
      'home' : `Welcome to Comic Relief. This is our homepage.` //,
      // 'aboutus' : ...,
      // 'services': ...,
      // 'contact': ...
    };

    function getPageContent(page) {
      var contentToReturn;

      switch(page){
        //...
      }

    }
    </script>

// https://v2.jokeapi.dev/joke/Any?safe-mode
    // 20220702191522
    // 20220702191553
    // 20220702191904
    // 20220702192033
    // 20220702192114

    // option: flags sidebar (~ fun police) 

    // card css --> 
    // https://codepen.io/kolpak/pen/ezoGWy (via )

  // ♡ ♥ ❤

  // joke.flags
  // if flags.value === true 
  // display flag
  // else 
  // display "no flags"

  // From "Building the Simple Liker App" //
    function likeEvent (event){
      const heart = event.target;
      heart.addEventListener('click');
      mimicServerCall() // 'http://mimicServer.example.com'
      .then(function() {
        if (heart.innerText === EMPTY_HEART){
          heart.innerText = FULL_HEART;
          } else {
          heart.innerText = EMPTY_HEART;
        }
      }) 

      // function renderSearch() {
//   const textField = document.createElement('form');
//   textField.idName = "search";
//   console.log(textField); 

//   document.append(textField);
// }

<nav class="nav">
  <ul>
    <li>
      <a href="#" class="nav_link">Dashboard</a>
    </li>
    <li>
      <a href="#jokes" class="nav_link">Jokes</a>
    </li>
    <li>
      <a href="#add-joke" class="nav_link">Add a joke</a>
    </li>
    <li>
      <a href="#search" class="nav_link">Search</a>
    </li>
  </ul>
</nav>

Search feature- iterator
? Like btn


// Lines 52-59
 likeBtn.className = 'like-btn';
  likeBtn.setAttribute('id', joke.id);
  likeBtn.innerText = 'like ♡';
  likeBtn.addEventListener('click', event => addLike(event, joke));

  const likes = document.createElement('p');
  likes.className = 'likes';
  likes.innerText = (`${joke.likes} likes`);

  **** 3 event listeners ****
  **** iterator**** clean, DRY code**** API
  **** HTML
  **** Book mtg by 7/11 45min project review
  - code
  - blog
  - readme
  - video (3min or less) - user 

  Review:
  - talk thru App
  - show/describe code (function-driven, not line-by-line)
    - why obj, fetch - promise - what i do with promise... update DB. / why choosing an iterator? why using? how implementing it.
  - code challenge


+ 1-2 more event listeners (hover / show delivery option)
-keydown/up
look at event listeners

  - submit work w/o code notes
  - be explicit in naming (p, moreLikes, likejokes - function names, behaviors) -what it is + what it does
  ACTION + target

  submit handler jokes